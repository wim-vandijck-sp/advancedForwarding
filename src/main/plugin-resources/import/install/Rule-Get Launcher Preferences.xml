<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule language="beanshell" name="Get Launcher Preferences" type="Workflow">
   <Description>A rule used by a Workflow to determine a step action or variable value. Note that an
      Attributes map of all variables from the current WorkflowContext, merged with the arguments
      from the Step, is also passed into the workflow rule.</Description>
   <Signature returnType="Object">
      <Inputs>
         <Argument name="log" type="org.apache.commons.logging.Log">
            <Description> The log object associated with the SailPointContext. </Description>
         </Argument>
         <Argument name="context" type="sailpoint.api.SailPointContext">
            <Description> A sailpoint.api.SailPointContext object that can be used to query the
               database if necessary. </Description>
         </Argument>
         <Argument name="wfcontext">
            <Description> The current WorkflowContext. </Description>
         </Argument>
         <Argument name="handler">
            <Description> The workflow handler associated with the current WorkflowContext. </Description>
         </Argument>
         <Argument name="workflow">
            <Description> The current Workflow definition. </Description>
         </Argument>
         <Argument name="step">
            <Description> The current Step. </Description>
         </Argument>
         <Argument name="approval">
            <Description> The current Approval. </Description>
         </Argument>
         <Argument name="item">
            <Description> The WorkItem being processed. </Description>
         </Argument>
         <Argument name="launcher">
            <Description>Name of the launcher. </Description>
         </Argument>
      </Inputs>
      <Returns>
         <Argument name="Object">
            <Description> The result of the workflow rule; dependent on the rule itself. </Description>
         </Argument>
      </Returns>
   </Signature>
   <Source><![CDATA[import sailpoint.object.*;
import org.apache.logging.log4j.Logger; 
import org.apache.logging.log4j.Level; 
import org.apache.logging.log4j.core.config.Configurator; 
Logger log = org.apache.logging.log4j.LogManager.getLogger("SERI.Rule.GetLauncherPrefs");
Configurator.setLevel("SERI.Rule.GetLauncherPrefs", Level.TRACE); 

log.trace("Entering Get Launcher Prefs Rule");

log.trace("Debug Step.");
log.debug("Listing Variables passed to Beanshell namespace:");

// BeanShell has a "this.variables" array that we can access.

for (int i = 0 ; i < this.variables.length ; i++) {
   String varName = this.variables[i];

   Object varValue = null;
   try {
      if ("transient".equals(varName)) {
         varValue = "[reserved word]";
      } else {
         varValue = eval(varName);
      } 
   } catch (Exception ex) {
      varValue = "[eval exception]";
   }

   String varClass = "void";
   if ((void != varValue) && (null != varValue)) {
      varClass = varValue.getClass().getSimpleName();
   }

   if (void == varValue) {
       log.debug(varName + " = void");
   } else if (null == varValue) {
       log.debug(varName + " = null");
   } else {
       log.debug(varName + ": " + varClass + " = " + varValue);
   }
}
log.debug("End Listing Variables passed to Beanshell namespace:");
log.debug("Checking " + launcher);
Identity ident = context.getObjectByName(Identity.class,launcher);
log.debug(ident);
Map prefs = ident.getPreferences();
log.trace("Leaving Get Preferences Rule: " + prefs);
return prefs;]]></Source>
</Rule>